// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/sirait-kevin/BillingEngine/handlers/restful (interfaces: BillingUsecase)

// Package mock_handler is a generated GoMock package.
package mock_handler

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entities "github.com/sirait-kevin/BillingEngine/domain/entities"
)

// MockBillingUsecase is a mock of BillingUsecase interface.
type MockBillingUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockBillingUsecaseMockRecorder
}

// MockBillingUsecaseMockRecorder is the mock recorder for MockBillingUsecase.
type MockBillingUsecaseMockRecorder struct {
	mock *MockBillingUsecase
}

// NewMockBillingUsecase creates a new mock instance.
func NewMockBillingUsecase(ctrl *gomock.Controller) *MockBillingUsecase {
	mock := &MockBillingUsecase{ctrl: ctrl}
	mock.recorder = &MockBillingUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBillingUsecase) EXPECT() *MockBillingUsecaseMockRecorder {
	return m.recorder
}

// CreateLoan mocks base method.
func (m *MockBillingUsecase) CreateLoan(arg0 context.Context, arg1 entities.LoanRequest) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateLoan", arg0, arg1)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateLoan indicates an expected call of CreateLoan.
func (mr *MockBillingUsecaseMockRecorder) CreateLoan(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateLoan", reflect.TypeOf((*MockBillingUsecase)(nil).CreateLoan), arg0, arg1)
}

// GetLoanListByUserId mocks base method.
func (m *MockBillingUsecase) GetLoanListByUserId(arg0 context.Context, arg1 int64) (*[]entities.Loan, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLoanListByUserId", arg0, arg1)
	ret0, _ := ret[0].(*[]entities.Loan)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLoanListByUserId indicates an expected call of GetLoanListByUserId.
func (mr *MockBillingUsecaseMockRecorder) GetLoanListByUserId(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLoanListByUserId", reflect.TypeOf((*MockBillingUsecase)(nil).GetLoanListByUserId), arg0, arg1)
}

// GetOutStandingAmountByReferenceID mocks base method.
func (m *MockBillingUsecase) GetOutStandingAmountByReferenceID(arg0 context.Context, arg1 string) (*entities.OutStanding, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOutStandingAmountByReferenceID", arg0, arg1)
	ret0, _ := ret[0].(*entities.OutStanding)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOutStandingAmountByReferenceID indicates an expected call of GetOutStandingAmountByReferenceID.
func (mr *MockBillingUsecaseMockRecorder) GetOutStandingAmountByReferenceID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOutStandingAmountByReferenceID", reflect.TypeOf((*MockBillingUsecase)(nil).GetOutStandingAmountByReferenceID), arg0, arg1)
}

// GetPaymentHistoryByReferenceID mocks base method.
func (m *MockBillingUsecase) GetPaymentHistoryByReferenceID(arg0 context.Context, arg1 string) (*entities.LoanHistory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPaymentHistoryByReferenceID", arg0, arg1)
	ret0, _ := ret[0].(*entities.LoanHistory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPaymentHistoryByReferenceID indicates an expected call of GetPaymentHistoryByReferenceID.
func (mr *MockBillingUsecaseMockRecorder) GetPaymentHistoryByReferenceID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPaymentHistoryByReferenceID", reflect.TypeOf((*MockBillingUsecase)(nil).GetPaymentHistoryByReferenceID), arg0, arg1)
}

// GetRepaymentInquiryByLoanReferenceId mocks base method.
func (m *MockBillingUsecase) GetRepaymentInquiryByLoanReferenceId(arg0 context.Context, arg1 string) (*entities.RepaymentInquiry, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRepaymentInquiryByLoanReferenceId", arg0, arg1)
	ret0, _ := ret[0].(*entities.RepaymentInquiry)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRepaymentInquiryByLoanReferenceId indicates an expected call of GetRepaymentInquiryByLoanReferenceId.
func (mr *MockBillingUsecaseMockRecorder) GetRepaymentInquiryByLoanReferenceId(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRepaymentInquiryByLoanReferenceId", reflect.TypeOf((*MockBillingUsecase)(nil).GetRepaymentInquiryByLoanReferenceId), arg0, arg1)
}

// GetUserStatusIsDelinquent mocks base method.
func (m *MockBillingUsecase) GetUserStatusIsDelinquent(arg0 context.Context, arg1 int64) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserStatusIsDelinquent", arg0, arg1)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserStatusIsDelinquent indicates an expected call of GetUserStatusIsDelinquent.
func (mr *MockBillingUsecaseMockRecorder) GetUserStatusIsDelinquent(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserStatusIsDelinquent", reflect.TypeOf((*MockBillingUsecase)(nil).GetUserStatusIsDelinquent), arg0, arg1)
}

// MakePayment mocks base method.
func (m *MockBillingUsecase) MakePayment(arg0 context.Context, arg1 entities.RepaymentRequest) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MakePayment", arg0, arg1)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MakePayment indicates an expected call of MakePayment.
func (mr *MockBillingUsecaseMockRecorder) MakePayment(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MakePayment", reflect.TypeOf((*MockBillingUsecase)(nil).MakePayment), arg0, arg1)
}
